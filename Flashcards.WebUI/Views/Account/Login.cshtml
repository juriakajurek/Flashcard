@using Flashcards.WebUI.Models
@model LoginViewModel
@{
    ViewBag.Title = "Please log in";
}

<div class="row">
    <div class="col-md-12 d-flex flex-row justify-content-center align-content-center flex-wrap">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-signin mt-5", role = "form" }))
            {

            <div class="card d-flex flex-column justify-content-center align-items-center align-content-center flex-wrap">
                <h3 class="card-header w-100">@ViewBag.Title</h3>
                @Html.AntiForgeryToken()
            <div class="card-body d-flex flex-column justify-content-center align-items-center align-content-center flex-wrap">
                <div class="form-signin">
                    @Html.LabelFor(m => m.Email, new { @class = "sr-only" })
                    <div class="col-md-12">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email address" })

                    </div>
                </div>
                <div class="form-signin">
                    @Html.LabelFor(m => m.Password, new { @class = "sr-only" })
                    <div class="col-md-12">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                    </div>
                </div>
                <div class="form-signin">
                    <div class="col-md-12 d-flex align-self-start">
                        <div class="checkbox pt-3">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <p class="col-md-12">
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger col-md-10" })
                    <br />
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger col-md-10" })
                    <br />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger col-md-10" })
                </p>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-12">
                        <input type="submit" value="Log in" class="btn btn-lg btn-primary btn-block " />
                    </div>
                </div>

                <p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>
            </div>
                @* Enable this once you have account confirmation enabled for password reset functionality
        <p>
            @Html.ActionLink("Forgot your password?", "ForgotPassword")
        </p>*@

            </div>
            }
        </section>
    </div>
    @{ 
        /*
            <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>

        */

    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}